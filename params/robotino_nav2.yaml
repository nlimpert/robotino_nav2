bt_navigatornavigate_to_pose_rclcpp_node:
  ros__parameters:
   goal_reached_tol: 0.25

bt_navigator:
  ros__parameters:
    use_sim_time: True
    global_frame: map
    robot_base_frame: base_link # suffixed by ROS_2_NAV_NS in launch file
    odom_topic: /odom # remapped by ROS_2_NAV_NS in launch file
    bt_loop_duration: 10
    default_server_timeout: 20
    enable_groot_monitoring: True
    groot_zmq_publisher_port: 1666
    groot_zmq_server_port: 1667
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    #default_nav_to_pose_bt_xml: "robocup_mapf_tree.xml"
    #default_nav_through_poses_bt_xml: "nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml"

    bt_navigatornavigate_to_pose_rclcpp_node:
       goal_reached_tol: 5.0

    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node
    - nav2_mapf_call_service_bt_node
    - nav2_check_for_wait_condition_bt_node

#controller_server:
#  ros__parameters:
#    odom_topic: /odom
#    use_sim_time: True
#    controller_frequency: 5.0
#    controller_plugin_types: ["teb_local_planner::TebLocalPlannerROS"]
#    controller_plugins: ["FollowPath"]
#    FollowPath:
#      plugin: teb_local_planner::TebLocalPlannerROS
#
#      teb_autosize: 1.0
#      dt_ref: 0.3
#      dt_hysteresis: 0.1
#      max_samples: 500
#      global_plan_overwrite_orientation: False
#      allow_init_with_backwards_motion: False
#      max_global_plan_lookahead_dist: 3.0
#      global_plan_viapoint_sep: 0.3
#      global_plan_prune_distance: 1.0
#      exact_arc_length: False
#      feasibility_check_no_poses: 2
#      publish_feedback: False
#
#      # Robot
#
#      max_vel_x: 0.26
#      max_vel_theta: 1.0
#      acc_lim_x: 2.5
#      acc_lim_theta: 3.2
#
#      footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
#        type: "circular"
#        radius: 0.17 # for type "circular"
#
#      # GoalTolerance
#
#      free_goal_vel: False
#
#      # Obstacles
#
#      min_obstacle_dist: 0.27
#      inflation_dist: 0.6
#      include_costmap_obstacles: True
#      costmap_obstacles_behind_robot_dist: 1.0
#      obstacle_poses_affected: 15
#
#      dynamic_obstacle_inflation_dist: 0.6
#      include_dynamic_obstacles: True
#
#      costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSMCCH"
#      costmap_converter_spin_thread: True
#      costmap_converter_rate: 5
#
#      # Optimization
#
#      no_inner_iterations: 5
#      no_outer_iterations: 4
#      optimization_activate: True
#      optimization_verbose: False
#      penalty_epsilon: 0.1
#      obstacle_cost_exponent: 4.0
#      weight_max_vel_x: 0.5
#      weight_max_vel_theta: 0.5
#      weight_acc_lim_x: 0.5
#      weight_acc_lim_theta: 10.5
#      weight_kinematics_nh: 1000.0
#      weight_kinematics_forward_drive: 3.0
#      weight_kinematics_turning_radius: 1.0
#      weight_optimaltime: 1.0 # must be > 0
#      weight_shortest_path: 0.0
#      weight_obstacle: 100.0
#      weight_inflation: 0.2
#      weight_dynamic_obstacle: 10.0 # not in use yet
#      weight_dynamic_obstacle_inflation: 0.2
#      weight_viapoint: 50.0
#      weight_adapt_factor: 2.0
#
#      # Homotopy Class Planner
#
#      enable_homotopy_class_planning: True
#      enable_multithreading: True
#      max_number_classes: 4
#      selection_cost_hysteresis: 5.0
#      selection_prefer_initial_plan: 1.0
#      selection_obst_cost_scale: 1.0
#      selection_alternative_time_cost: True
#
#      roadmap_graph_no_samples: 15
#      roadmap_graph_area_width: 5.0
#      roadmap_graph_area_length_scale: 1.0
#      h_signature_prescaler: 0.5
#      h_signature_threshold: 0.1
#      obstacle_heading_threshold: 0.45
#      switching_blocking_period: 0.0
#      viapoints_all_candidates: True
#      delete_detours_backwards: True
#      max_ratio_detours_duration_best_duration: 3.0
#      visualize_hc_graph: False
#      visualize_with_time_as_z_axis_scale: 0.0
#
#      # Recovery
#
#      shrink_horizon_backup: True
#      shrink_horizon_min_duration: 10.0
#      oscillation_recovery: True
#      oscillation_v_eps: 0.1
#      oscillation_omega_eps: 0.1
#      oscillation_recovery_min_duration: 10.0
#      oscillation_filter_duration: 10.0
#
                                                            
################ DWB SETTING
#controller_server:
#  ros__parameters:
#    use_sim_time: True
#    controller_frequency: 20.0
#    min_x_velocity_threshold: 0.01
#    min_y_velocity_threshold: 0.5
#    min_theta_velocity_threshold: 0.001
#    failure_tolerance: 0.3
#    progress_checker_plugin: "progress_checker"
#    goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"
#    controller_plugins: ["FollowPath"]
#
#    # Progress checker parameters
#    progress_checker:
#      plugin: "nav2_controller::SimpleProgressChecker"
#      required_movement_radius: 0.5
#      movement_time_allowance: 10.0
#    # Goal checker parameters
#    #precise_goal_checker:
#    #  plugin: "nav2_controller::SimpleGoalChecker"
#    #  xy_goal_tolerance: 0.25
#    #  yaw_goal_tolerance: 0.25
#    #  stateful: True
#    general_goal_checker:
#      stateful: True
#      plugin: "nav2_controller::SimpleGoalChecker"
#      xy_goal_tolerance: 0.15
#      yaw_goal_tolerance: 0.2
#    # DWB parameters
#    FollowPath:
#      plugin: "dwb_core::DWBLocalPlanner"
#      debug_trajectory_details: True
#      min_vel_x: 0.0
#      min_vel_y: 0.0
#      max_vel_x: 0.8
#      max_vel_y: 0.1
#      max_vel_theta: 1.0
#      min_speed_xy: 0.0
#      max_speed_xy: 0.8
#      min_speed_theta: 0.0
#      # Add high threshold velocity for turtlebot 3 issue.
#      # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/75
#      acc_lim_x: 2.5
#      acc_lim_y: 0.2
#      #acc_lim_y: 0.0
#      acc_lim_theta: 1.6
#      decel_lim_x: -2.5
#      decel_lim_y: -1.5
#      #decel_lim_y: 0.0
#      decel_lim_theta: -3.2
#      vx_samples: 20
#      vy_samples: 1
#      vtheta_samples: 20
#      sim_time: 1.7
#      linear_granularity: 0.05
#      angular_granularity: 0.025
#      transform_tolerance: 0.2
#      xy_goal_tolerance: 0.15
#      trans_stopped_velocity: 0.25
#      short_circuit_trajectory_evaluation: True
#      stateful: True
#      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
#      BaseObstacle.scale: 0.06
#      PathAlign.scale: 48.0
#      PathAlign.forward_point_distance: 0.325
#      GoalAlign.scale: 16.0
#      GoalAlign.forward_point_distance: 0.1
##      GoalAlign.forward_point_distance: 0.025
##      GoalAlign.aggregation_type: "sum"
#      PathDist.scale: 48.0
#      GoalDist.scale: 1.0
#      RotateToGoal.scale: 48.0
#      RotateToGoal.slowing_factor: 1.0
#      RotateToGoal.lookahead_time: -1.0
      

########## REGULATED PURE PURSUIT SETTING
controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"
#    goal_checker_plugins: "goal_checker"
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    general_goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25
      stateful: True
    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.5
      lookahead_dist: 0.6
      min_lookahead_dist: 0.3
      max_lookahead_dist: 0.9
      lookahead_time: 1.5
      rotate_to_heading_angular_vel: 1.8
      transform_tolerance: 0.1
      use_velocity_scaled_lookahead_dist: false
      min_approach_linear_velocity: 0.05
      use_approach_linear_velocity_scaling: true
      max_allowed_time_to_collision_up_to_carrot: 1.0
      use_regulated_linear_velocity_scaling: true
      use_cost_regulated_linear_velocity_scaling: false
      regulated_linear_scaling_min_radius: 0.9
      regulated_linear_scaling_min_speed: 0.25
      use_rotate_to_heading: false
      rotate_to_heading_min_angle: 0.785
      max_angular_accel: 3.2
      max_robot_pose_search_dist: 10.0
      use_interpolation: false
      cost_scaling_dist: 0.3
      cost_scaling_gain: 1.0
      inflation_cost_scaling_factor: 3.0

local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: True
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom # suffixed by ROS_2_NAV_NS in launch file
      robot_base_frame: base_link # suffixed by ROS_2_NAV_NS in launch file
      rolling_window: true
      width: 3
      height: 3
      resolution: 0.05
      robot_radius: 0.2
      footprint_padding: 0.05
      plugins: ["voxel_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 10.0
        inflation_radius: 0.2
      voxel_layer:
        plugin: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"
        enabled: true
        voxel_decay: 5.0                # seconds if linear, e^n if exponential
        decay_model: 0                  # 0=linear, 1=exponential, -1=persistent
        voxel_size: 0.05                # meters
        track_unknown_space: true       # default space is known
        max_obstacle_height: 2.0        # meters
        unknown_threshold: 15           # voxel height
        mark_threshold: 0               # voxel height
        update_footprint_enabled: true
        combination_method: 1           # 1=max, 0=override
        obstacle_range: 3.0             # meters
        origin_z: 0.0                   # meters
        publish_voxel_map: false        # default off
        transform_tolerance: 0.2        # seconds
        mapping_mode: false             # default off, saves map not for navigation
        map_save_duration: 60.0         # default 60s, how often to autosave
        observation_sources: laser_scan_sensor
        laser_scan_sensor:
          data_type: LaserScan
#          topic: scan_filtered
          topic: /fawkes_scans/Laser_urg_filtered_360 # remapped by ROS_2_NAV_NS in launch file
          marking: true
          clearing: true
      
          # default 0, if not updating at
          # this rate at least, remove from buffer
          expected_update_rate: 5.0
      
          # default 0, use all measurements taken
          # during now-value, 0=latest
          observation_persistence: 0.2
      
          # meters, discard obstacles exceeding
          # this range
          obstacle_range: 5.0

#        plugin: "nav2_costmap_2d::VoxelLayer"
#        enabled: True
#        publish_voxel_map: True
#        origin_z: 0.0
#        z_resolution: 0.05
#        z_voxels: 16
#        max_obstacle_height: 2.0
#        mark_threshold: 0
#        observation_sources: scan
#        scan:
#          topic: /fawkes_scans/Laser_urg_filtered_360
#          max_obstacle_height: 2.0
#          clearing: True
#          marking: True
#          data_type: "LaserScan"
#          raytrace_max_range: 3.0
#          raytrace_min_range: 0.0
#          obstacle_max_range: 2.5
#          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
#        map_topic: "/map_nav2"
        map_topic: "/map"
        map_subscribe_transient_local: True
      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: True
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link # suffixed by ROS_2_NAV_NS in launch file
      robot_radius: 0.3
      footprint_padding: 0.05
#      robot_radius: 0.1
#      footprint_padding: 0.3
      resolution: 0.1
      track_unknown_space: true
      plugins: ["static_layer", "voxel_layer", "inflation_layer"]
      voxel_layer:
        plugin: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"
        enabled: true
        voxel_decay: 5.0                # seconds if linear, e^n if exponential
        decay_model: 0                  # 0=linear, 1=exponential, -1=persistent
        voxel_size: 0.05                # meters
        track_unknown_space: true       # default space is known
        max_obstacle_height: 2.0        # meters
        unknown_threshold: 15           # voxel height
        mark_threshold: 0               # voxel height
        update_footprint_enabled: true
        combination_method: 0           # 1=max, 0=override
        obstacle_range: 3.0             # meters
        origin_z: 0.0                   # meters
        publish_voxel_map: false        # default off
        transform_tolerance: 0.2        # seconds
        mapping_mode: false             # default off, saves map not for navigation
        map_save_duration: 60.0         # default 60s, how often to autosave
        observation_sources: laser_scan_sensor
        laser_scan_sensor:
          data_type: LaserScan
#          topic: scan_filtered
          topic: /fawkes_scans/Laser_urg_filtered_360
          marking: true
          clearing: true
      
          # default 0, if not updating at
          # this rate at least, remove from buffer
          expected_update_rate: 5.0
      
          # default 0, use all measurements taken
          # during now-value, 0=latest
          observation_persistence: 5.0
      
          # meters, discard obstacles exceeding
          # this range
          obstacle_range: 5.0

#      obstacle_layer:
#        plugin: "nav2_costmap_2d::ObstacleLayer"
#        enabled: True
#        observation_sources: scan
#        scan:
#          topic: /fawkes_scans/Laser_urg_filtered_360
#          max_obstacle_height: 2.0
#          clearing: True
#          marking: True
#          data_type: "LaserScan"
#          raytrace_max_range: 3.0
#          raytrace_min_range: 0.0
#          obstacle_max_range: 2.5
#          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_topic: "/map"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 10.0
        inflation_radius: 1.0
      always_send_full_costmap: True

map_saver:
  ros__parameters:
    use_sim_time: True
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

#planner_server:
#  ros__parameters:
#    expected_planner_frequency: 20.0
#    planner_plugins: ["GridBased"]
#    GridBased:
#      plugin: "nav2_navfn_planner/NavfnPlanner"
#      tolerance: 0.5
#      use_astar: false
#      allow_unknown: true

#planner_server:
#  ros__parameters:
#    expected_planner_frequency: 20.0
#    use_sim_time: False
#    planner_plugins: ["GridBased"]
#    GridBased:
##      plugin: "nav2_mapf_planner/MapfPlanner"
#      plugin: 'nav2_navfn_planner/NavfnPlanner'
#      use_astar: True
#      allow_unknown: True
#      tolerance: 1.0


planner_server:
  ros__parameters:
#    use_sim_time: False
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: 'nav2_navfn_planner/NavfnPlanner'
      use_astar: True
      allow_unknown: True
      tolerance: 0.0
      
recoveries_server:
  ros__parameters:
    use_sim_time: True
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    recovery_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_recoveries/Spin"
    backup:
      plugin: "nav2_recoveries/BackUp"
    wait:
      plugin: "nav2_recoveries/Wait"
    global_frame: odom # suffixed by ROS_2_NAV_NS in launch file
    robot_base_frame: base_link # suffixed by ROS_2_NAV_NS in launch file
    transform_timeout: 0.1
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

waypoint_follower:
  ros__parameters:
    use_sim_time: True
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"   
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200


#map_server:
#  ros__parameters:
#    yaml_filename: "/home/robotino/colcon_ws/src/robotino_nav2/maps/fha.yaml"
#    topic_name: "/map_nav2"
